user $NGINX_USER;

error_log /dev/stdout info;

pid /var/run/nginx.pid;

worker_processes 2;
worker_rlimit_nofile 4096;
events {
  use epoll;
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;

  log_format main '[$time_local] remote_addr: $http_x_real_ip, request: "$request", '
  'status: $status, body_bytes_sent: $body_bytes_sent, http_referer: "$http_referer", '
  'http_user_agent: "$http_user_agent", x_request_id: "$http_x_request_id"';

  access_log /dev/stdout main;

  server_tokens off;

  autoindex off;

  port_in_redirect off;
  absolute_redirect off;

  client_header_buffer_size 1k;
  large_client_header_buffers 4 8k;
  client_body_buffer_size 1M;
  client_max_body_size 50G;

  client_header_timeout 60;
  client_body_timeout 60;
  client_body_in_file_only off;
  keepalive_timeout 900;
  send_timeout 60;

  proxy_hide_header X-Powered-By;


  limit_conn_zone $http_x_real_ip zone=limitperip:10m;
  limit_req_zone $http_x_real_ip zone=frontendratelimit:10m rate=1500r/s;
  limit_req_zone $http_x_real_ip zone=ratelimit:10m rate=200r/s;

  gzip on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_comp_level 5;
  gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/x-httpd-php application/json;
  gzip_vary on;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 8080 ssl default_server;
    server_name message-center.test.osinfra,cn;
    charset utf-8;

    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; frame-src 'none'";
    add_header Cache-Control "no-cache,no-store,must-revalidate";
    add_header Pragma no-cache;
    add_header Expires 0;

    ssl_session_tickets off;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;

    ssl_certificate "cert/server.crt";
    ssl_certificate_key "cert/server.key";
    ssl_password_file "cert/abc.txt";
    ssl_dhparam "cert/dhparam.pem";
    ssl_ecdh_curve auto;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384";
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout 5s;

    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE)$) {
      return 444;
    }

    location / {
      proxy_set_header X-Forwarded-For $http_x_real_ip;
      proxy_set_header Host $host;

      location /assets {
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' ; object-src 'none'; frame-src 'none'";
        add_header Cache-Control "public,max-age=1209600";
      }

      location / {
        try_files $uri /index.html;
      }

      root /usr/share/nginx/www;
      index index.html;
    }

    # location ^~ /server/ {
    #   add_header X-XSS-Protection "1; mode=block";
    #   add_header X-Frame-Options DENY;
    #   add_header X-Content-Type-Options nosniff;
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    #   add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' ; object-src 'none'; frame-src 'none'";
    #   add_header Cache-Control "no-cache,no-store,must-revalidate";
    #   add_header Pragma no-cache;
    #   add_header Expires 0;

    #   proxy_set_header X-Forwarded-For $http_x_real_ip;
    #   proxy_http_version 1.1;
    #   proxy_set_header Connection "";
    #   proxy_ssl_verify	off;
    #   proxy_ssl_protocols TLSv1.3;
    #   proxy_buffering off;
    #   proxy_cache off;
    #   proxy_buffer_size 8k;
    #   proxy_read_timeout 900;
    #   proxy_pass https://server-service.merlin.svc.cluster.local:8080/web/v1/;
    # }

    location ^~ /collect/gitee-hook/ {
       add_header X-XSS-Protection "1; mode=block";
       add_header X-Frame-Options DENY;
       add_header X-Content-Type-Options nosniff;
       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
       add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' ; object-src 'none'; frame-src 'none'";
       add_header Cache-Control "no-cache,no-store,must-revalidate";
       add_header Pragma no-cache;
       add_header Expires 0;

       proxy_set_header X-Forwarded-For $http_x_real_ip;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       proxy_ssl_verify	off;
       proxy_ssl_protocols TLSv1.3;
       proxy_buffering off;
       proxy_cache off;
       proxy_buffer_size 8k;
       proxy_read_timeout 900;
       proxy_pass http://collect-githook-service.message-center.svc.cluster.local:8888/gitee-hook;
    }

    location ^~ /message_center/ {
       add_header X-XSS-Protection "1; mode=block";
       add_header X-Frame-Options DENY;
       add_header X-Content-Type-Options nosniff;
       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
       add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' ; object-src 'none'; frame-src 'none'";
       add_header Cache-Control "no-cache,no-store,must-revalidate";
       add_header Pragma no-cache;
       add_header Expires 0;

       proxy_set_header X-Forwarded-For $http_x_real_ip;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       proxy_ssl_verify	off;
       proxy_ssl_protocols TLSv1.3;
       proxy_buffering off;
       proxy_cache off;
       proxy_buffer_size 8k;
       proxy_read_timeout 900;
       proxy_pass http://manager-service.message-center.svc.cluster.local:8082/message_center;
       proxy_redirect off;
       proxy_set_header Content-Length $content_length;
       proxy_set_header Content-Type $content_type;
       proxy_pass_request_body on;
    }

    error_page 401 402 403 405 406 407 413 414 /error.html;
    error_page 500 501 502 503 504 505 /error.html;
    error_page 404 /index.html;

    location = /error.html {
      root /usr/share/nginx/www;
    }
  }
}